/**
  ******************************************************************************
  * @file    log.txt
  * @author  Apex-yuan
  * @version V1.0
  * @date    2019-4-4
  * @brief   用于记录工程文档改变的日志
  ******************************************************************************
  * @attention 
  *
  ******************************************************************************
  */ 

/* 2019/4/3 V1.0 */
ROS_STM32F1 机器人底盘程序组件基本完整版：
1.包含完整的rosserial库
2.移植了Turtlebot3 burger的部分控制程序（通过topic发布订阅消息：发布imu消息，发布odom消息，发布joint_states消息，订阅cmd_vel消息）
3.包含mpu6050 dmp库，可直接获取 加速度计、陀螺仪的数据及四元数信息
4.包含编码器及电机的底层控制函数和电机的PID控制函数，可支持ros下发速度，电机快速达到目标速度。

/* 2019/4/4 */
  轮子PID控制算法：（方法2：已经实验成功，方法1：目前测试结果不太可以，还需要进一步实验验证）
1.（类似于平衡小车的速度控制和方向控制）将线速度当作直线方向上的速度控制：速度PI控制，将角速度当作转向的方向控制：方向PD控制。
2.将目标线速度和角速度转化为两个轮子分别的速度再独立施加速度PI控制

/* 2019/4/5 */
1.程序卡死在启动文件的 B 处，说明有中断函数没有处理或在C++文件编程时中断函数没加 extern “C”
#ifdef __cplusplus
extern "C" {
#endif
 中断服务函数 
#ifdef __cplusplus
}
#endif
2.话题不能在中断服务函数中发布（原因不清楚）
   实验结果：将话题发布放入中断函数中执行，整个中断的周期会变长（ms计数频率会变慢），上位机端显示话题ID和消息的校验码错误。
３.TIM_TIMER_Init(uint16_t arr, uint16_t psc) 函数的初始化位置有讲究，如果函数内部的TIM_Cmd(TIM1,ENABLE)为使能状态，
   函数会立刻进入中断进程，导致一些奇怪的问题（程序死在硬件上访中断）。
  